imports:
    - { resource: parameters.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']


    default_locale:  "es"
    trusted_hosts:   ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes: ['bootstrap_3_layout.html.twig']
    globals:
        utils: "@taxidriver.utils"
        google_recaptcha_public_key: "%google.recaptcha_public_key%"
        google_recaptcha_secret_key: "%google.recaptcha_secret_key%"
        google_api_key: "%google.api_key%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
            numeric_functions:
                Rand: AppBundle\Utils\Rand

# Swiftmailer Configuration
swiftmailer:
    transport: smtp
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_ck_editor:
    configs:
        my_config:
            toolbar: basic

liip_imagine:
    # valid drivers options include "gd" or "gmagick" or "imagick"
    driver: "gd"
    # configure resolvers
    resolvers:
     default:
      web_path:
        web_root: "%kernel.root_dir%/../public_html/"
        cache_prefix: /static/cache
    loaders:
     default:
       filesystem:
         data_root: %kernel.root_dir%/../public_html/static
     #cache: 'profile'


    # define your filter sets under this option
    filter_sets:

        # an example thumbnail transformation definition
        # https://symfony.com/doc/current/bundles/LiipImagineBundle/basic-usage.html#create-thumbnails
        thumbnail:

                    # set your image quality defaults
                    jpeg_quality:          60
                    png_compression_level: 8

                    # setup the filter steps to apply for this transformation
                    filters:

                        # auto rotate the image using EXIF metadata
                        auto_rotate: ~

                        # strip the image of all metadata
                        strip: ~

                        # scale and square the image to the given dimensions
                        thumbnail:
                            size:          [20, 20]
                            mode:          outbound

        thumbnail_testimonio:

                            # set your image quality defaults
                            jpeg_quality:          60
                            png_compression_level: 8

                            # setup the filter steps to apply for this transformation
                            filters:

                                # auto rotate the image using EXIF metadata
                                auto_rotate: ~

                                # strip the image of all metadata
                                strip: ~

                                # scale and square the image to the given dimensions
                                thumbnail:
                                    size:          [180, 180]
                                    mode:          outbound

        small_thumbnail:

            # set your image quality defaults
            jpeg_quality:          60
            png_compression_level: 8

            # setup the filter steps to apply for this transformation
            filters:

                # auto rotate the image using EXIF metadata
                auto_rotate: ~

                # strip the image of all metadata
                strip: ~

                # scale and square the image to the given dimensions
                thumbnail:
                    size:          [40, 40]
                    mode:          outbound

        squared_thumbnail:

            # set your image quality defaults
            jpeg_quality:          85
            png_compression_level: 8

            # setup the filter steps to apply for this transformation
            filters:

              # auto rotate the image using EXIF metadata
                auto_rotate: ~

                # strip the image of all metadata
                strip: ~

                # scale and square the image to the given dimensions
                thumbnail:
                    size:          [253, 253]
                    mode:          outbound
                    allow_upscale: true
#                # create border by placing image on larger black background
                background:
                    size:     [256, 256]
                    position: center
                    color:    '#fff'

        min_width_1200:
            filters:
                auto_rotate: ~
                strip: ~
                relative_resize:
                    widen: 1200

        min_width_1000:

            # set your image quality defaults
            jpeg_quality:          85
            png_compression_level: 8

            # setup the filter steps to apply for this transformation
            filters:
                auto_rotate: ~
                strip: ~
                relative_resize:
                    widen: 1000

        min_width_800:

            # set your image quality defaults
            jpeg_quality:          85
            png_compression_level: 8

            # setup the filter steps to apply for this transformation
            filters:
                auto_rotate: ~
                strip: ~
                relative_resize:
                    widen: 800

        min_width_600:

            # set your image quality defaults
            jpeg_quality:          85
            png_compression_level: 8

            # setup the filter steps to apply for this transformation
            filters:
                auto_rotate: ~
                strip: ~
                relative_resize:
                    widen: 600

        min_width_400:

                    # set your image quality defaults
                    jpeg_quality:          85
                    png_compression_level: 8

                    # setup the filter steps to apply for this transformation
                    filters:
                        auto_rotate: ~
                        strip: ~
                        relative_resize:
                            widen: 400

        min_width_300:

            # set your image quality defaults
            jpeg_quality:          85
            png_compression_level: 8

            # setup the filter steps to apply for this transformation
            filters:
                auto_rotate: ~
                strip: ~
                relative_resize:
                    widen: 300

        min_width_200:

                    # set your image quality defaults
                    jpeg_quality:          85
                    png_compression_level: 8

                    # setup the filter steps to apply for this transformation
                    filters:
                        auto_rotate: ~
                        strip: ~
                        relative_resize:
                            widen: 200