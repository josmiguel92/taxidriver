{% extends 'AppBundle:Dash:base.html.twig' %}
{% block pagetitle %}Servicios de Taxi{% endblock pagetitle %}
{% block content %}



<div class="row">
    <div class="col-lg-6 col-md-6">
        <div class="card">
            <div class="header">
                <h4 class="title">Destinos disponibles</h4>
            </div>
            <div class="content">
                <div class="row">
                    <div class="col-md-12">
                        <ul class="btn-list places">
                            {% for place in places %}
                                <li> {% if place.origin is not empty %}
                                        {{ place.origin }}
                                            -
                                    {% endif %}
                                    {{ place.name }}
                                    <a href="#" class="btn btn-sm btn-info editbtn" title="Editar" data-placeid="{{ place.id }}"><i class="ti-pencil"></i> </a>

                                </li>
                            {% else %}
                                No hay lugares a&uacute;n
                            {% endfor %}
                        </ul>

                    </div>


                </div>
                <div class="clearfix"></div>

            </div>
        </div>
        </div>




    <div class="col-lg-6 col-md-6">
        <div class="card" id="placeForm">
            <div class="header">
                <h4 class="title"  data-toggle="collapse" data-target="#addPlace">Agregar un destino<small><i class="fa-spin fa fa-spinner hidden formLoader" style="float: right"></i></small></h4>
            </div>
            <div class="content">

                {{ form_start(placeForm) }}
                <div class="row"  id="addPlace">
                    <div class="col-md-12">
                        <label>Seleccione el Origen</label>
                        <div class="form-group">
                            <input class="start-point placepicker form-control" data-map-container-id="collapseOriginPlaceMap"/>
                        </div>
                        <div id="collapseOriginPlaceMap" class="collapse">
                            <div class="placepicker-map thumbnail"></div>
                        </div>


                        {{ form_row(placeForm.origin) }}
                        {{ form_row(placeForm.originEn) }}

                        <label>Seleccione el Destino</label>
                        <div class="form-group">
                            <input class="end-point placepicker form-control" data-map-container-id="collapseEndPlaceMap"/>
                        </div>
                        <div id="collapseEndPlaceMap" class="collapse">
                            <div class="placepicker-map thumbnail"></div>
                        </div>
                        {{ form_row(placeForm.name) }}

                        {{ form_widget(placeForm) }}

                    </div>


                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-info btn-fill btn-wd">Guardar</button>
                </div>

                {{ form_end(placeForm) }}
                <div class="clearfix"></div>

            </div>
        </div>
    </div>



</div>








{% endblock %}
{% block javascripts %}
    {{ parent() }}
     <script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/froala-editor/2.8.5/js/froala_editor.min.js'></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/froala-editor/2.8.5/js/plugins/link.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/froala-editor/2.8.5/js/plugins/lists.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/froala-editor/2.8.5/js/plugins/url.min.js"></script>

    <script src="{{ asset("js/jquery.placepicker.js") }}"></script>

    <script>
        $('document').ready(function(){

            $('ul.places .btn.editbtn').click(function(e){
                e.preventDefault();
                $(".fa-spinner.formLoader")[0].classList.remove('hidden');
                var edit_path = "{{ path('dash_services_place_edit', {'id':'placeidplaceholder'}) }}"

                console.log(edit_path)
                place_id = this.dataset['placeid']
                current_edit_path = edit_path.replace('placeidplaceholder',place_id)
                console.log(current_edit_path)
                $('#placeForm').load(current_edit_path, function () {
                    $(".fa-spinner.formLoader")[0].classList.add('hidden');
                })

            });

            var startPointCoord = new google.maps.LatLng(23.143056, -82.38055600000001);
            var endPointCoord = null;

            $(".start-point").placepicker({
                mapIconClass: "ti-map-alt",
                placeChanged: function(place) {

                    $("#appbundle_place_origin")[0].value = place.name;
                    startPointCoord = new google.maps.LatLng(this.getLocation().latitude, this.getLocation().longitude);

                    if (endPointCoord != null) {
                        serviceDistance.getDistanceMatrix(
                            {
                                origins: [startPointCoord],
                                destinations: [endPointCoord],
                                travelMode: 'DRIVING',
                                avoidHighways: false,
                                avoidTolls: false,
                            }, callbackDistance);

                        $('#appbundle_place_distance')[0].value = calcDistance(startPointCoord, endPointCoord);
                    }
                },
                mapOptions: {
                    zoom: 15,
                    center: {lat: 23.143056, lng: -82.38055600000001}
                }
            }).data('placepicker');

            $(".end-point").placepicker({
                mapIconClass: "ti-map-alt",
                placeChanged: function(place) {
                    $("#appbundle_place_name")[0].value = place.name;
                    $("#appbundle_place_latlong")[0].value = this.getLocation().latitude + ', '+this.getLocation().longitude;
                    $("#appbundle_place_googlename")[0].value = place.formatted_address;
                    endPointCoord = new google.maps.LatLng(this.getLocation().latitude, this.getLocation().longitude);

                    serviceDistance.getDistanceMatrix(
                        {
                            origins: [startPointCoord],
                            destinations: [endPointCoord],
                            travelMode: 'DRIVING',
                            avoidHighways: false,
                            avoidTolls: false,
                        }, callbackDistance);

                    $('#appbundle_place_distance')[0].value = calcDistance(startPointCoord, endPointCoord);
                },
                mapOptions: {
                    zoom: 15,
                    center: {lat: 23.143056, lng: -82.38055600000001}
                }
            }).data('placepicker');

            var rad = function(x) {
                return x * Math.PI / 180;
            };

            calcDistance = function calcDistancePlane(p1, p2) {
                return (google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);
            };

            serviceDistance = new google.maps.DistanceMatrixService();
            var secondsToHourMinutes = function (seconds) {
                return {'hours': Math.round(seconds/3600),
                        'minutes': Math.round(seconds%3600 / 60)}
            };


            callbackDistance = function callbackDistanceMatrix(response, status) {
                if (status == 'OK') {
                    var origins = response.originAddresses;
                    var destinations = response.destinationAddresses;

                    for (var i = 0; i < origins.length; i++) {
                        var results = response.rows[i].elements;
                        for (var j = 0; j < results.length; j++) {
                            var element = results[j];
                            var distance = Math.round(element.distance.value/1000, -2);
                            var duration = secondsToHourMinutes(element.duration.value);
                            var from = origins[i];
                            var to = destinations[j];
                        }
                    }


                    $('#appbundle_place_distance')[0].value = distance;
                    $('#appbundle_place_time_hour')[0].value = duration.hours;
                    $('#appbundle_place_time_minute')[0].value = duration.minutes;

                }


            }
        });


    </script>
{% endblock %}
{% block stylesheets %}
  {{ parent() }}
  <!-- Include Editor style. -->
  <link href='https://cdnjs.cloudflare.com/ajax/libs/froala-editor/2.8.5/css/froala_editor.min.css' rel='stylesheet' type='text/css' />
  <link href='https://cdnjs.cloudflare.com/ajax/libs/froala-editor/2.8.5/css/froala_style.min.css' rel='stylesheet' type='text/css' />
{% endblock stylesheets %}

