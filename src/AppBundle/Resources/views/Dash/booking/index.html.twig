    {% extends 'AppBundle:Dash/booking:base.html.twig' %}
{% set pagename = 'booking'  %}
{% block content %}
    <h2 >Todas las reservas</h2>

{% if all_booking == 'yes' %}
    <a href="{{ path('dash_bookings_index') }}" class="btn btn-info" style="float: right;"> Mostrar todas</a>
{% else %}
    <a href="{{ path('dash_bookings_index', {'all_booking': 'yes'}) }}" class="btn btn-info" style="float: right;"> Mostrar solo futuras</a>
{% endif %}
    <a href="{{ path('dash_bookings_new') }}" class="btn btn-primary"><i class="fa fa-plus"></i> Agregar Reservaci&oacute;n</a>
    {% if prev_page > 0 %}
    <a href="{{ path('dash_bookings_index', {'page': prev_page, 'all_booking': all_booking}) }}" class="btn"><i class="fa fa-arrow-left"></i> P&aacute;gina anterior</a>
    {% endif %}
    <a href="{{ path('dash_bookings_index', {'page': next_page, 'all_booking': all_booking}) }}" class="btn">P&aacute;gina siguiente <i class="fa fa-arrow-right"></i></a>

<hr>
    <div class="row">
        <div class="col-md-12">
            <form class="inline-form" action="{{ path('dash_bookings_index') }}" onsubmit="if 
            (!(document.getElementById('minDateInput').valueAsDate < document.getElementById('maxDateInput').valueAsDate)) {alert('Revise el orden de las fechas.'); return false }">
                <label for="minDate">Mostrar reservas entre el </label>
                <input type="date" name="minDate" required="true" id="minDateInput" value="{{ app.request.get('minDate') }}">
                <label for="maxDate">hasta el </label>
                <input type="date" name="maxDate" required="true" id="maxDateInput" value="{{ app.request.get('maxDate') }}">
                <input type="submit" name="filterByDateSubmit" value="OK" class="btn btn-sm" required="true">
            </form>
        </div>
    </div>

<hr>

    <table id="booking-table"  tabulator-tooltips="true">
        <thead>
            <tr>
                <th>Id</th>
                
                <th>Fecha de Reserva</th>
                <th>Hora de Reserva</th>
                <th>Destino</th>
                <th>Tipo de Servicio</th>

                <th>Nombre</th>
                <th># personas</th>


                <th tabulator-formatter="money">Precio</th>
                <th tabulator-formatter="html">Mostrar</th>
            </tr>
        </thead>
        <tbody>
        {% for booking in bookings %}
            <tr>
                <td>{{ booking.token }}</td>
                <td>{% if booking.pickuptime %}{{ booking.pickuptime|date('d/M/Y') }}{% endif %}</td>
                <td>{% if booking.pickuptime %}{{ booking.pickuptime|date('H:i') }}{% endif %}</td>

                <td>{{ utils.cutText(booking.targetPlace,20, true) }}</td>
                <td>{{ utils.cutText(booking.serviceType,5, true) }}</td>
                
                <td>{{ booking.fullname }}</td>

                <td>{{ booking.numpeople }}</td>
                
                <td>{{ booking.price }}  {{ booking.currency ? booking.currency : 'EUR' }}</td>
                <td><b><a href="{{ path('dash_bookings_show', { 'id': booking.id }) }}">Mostrar detalles</a> </b></td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <hr>

    <a href="{{ path('dash_bookings_new') }}" class="btn btn-primary"><i class="fa fa-plus"></i> Agregar Reservaci&oacute;n</a>
    {% if prev_page > 0 %}
        <a href="{{ path('dash_bookings_index', {'page': prev_page}) }}" class="btn"><i class="fa fa-arrow-left"></i> P&aacute;gina anterior</a>
    {% endif %}
    <a href="{{ path('dash_bookings_index', {'page': next_page}) }}" class="btn">P&aacute;gina siguiente <i class="fa fa-arrow-right"></i></a>

    <link href="{{ asset('css/bootstrap/tabulator_bootstrap.min.css') }}" rel="stylesheet">
    <style type="text/css">
    	.tabulator-responsive-collapse table:nth-child(1) > tbody:nth-child(1) > tr:last-child{
    		background: #bbb
    	}
    	.tabulator-row {
    border-bottom: 3px solid #ddd;
}
    </style>
    <script type="text/javascript" src="{{ asset('js/jquery.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/tabulator.min.js') }}"></script>
    <script>

        //custom max min header filter
        var minMaxFilterEditor = function(cell, onRendered, success, cancel, editorParams){

            var end;

            var container = document.createElement("span");

            //create and style inputs
            var start = document.createElement("input");
            start.setAttribute("type", "number");
            start.setAttribute("placeholder", "Min");
            start.setAttribute("min", 0);
            start.setAttribute("max", 100);
            start.style.padding = "4px";
            start.style.width = "50%";
            start.style.boxSizing = "border-box";

            start.value = cell.getValue();

            function buildValues(){
                success({
                    start:start.value,
                    end:end.value,
                });
            }

            function keypress(e){
                if(e.keyCode == 13){
                    buildValues();
                }

                if(e.keyCode == 27){
                    cancel();
                }
            }

            end = start.cloneNode();

            start.addEventListener("change", buildValues);
            start.addEventListener("blur", buildValues);
            start.addEventListener("keydown", keypress);

            end.addEventListener("change", buildValues);
            end.addEventListener("blur", buildValues);
            end.addEventListener("keydown", keypress);


            container.appendChild(start);
            container.appendChild(end);

            return container;
        }

        //custom max min filter function
        function minMaxFilterFunction(headerValue, rowValue, rowData, filterParams){
            //headerValue - the value of the header filter element
            //rowValue - the value of the column in this row
            //rowData - the data for the row being filtered
            //filterParams - params object passed to the headerFilterFuncParams property

            if(rowValue){
                if(headerValue.start != ""){
                    if(headerValue.end != ""){
                        return rowValue >= headerValue.start && rowValue <= headerValue.end;
                    }else{
                        return rowValue >= headerValue.start;
                    }
                }else{
                    if(headerValue.end != ""){
                        return rowValue <= headerValue.end;
                    }
                }
            }

            return false; //must return a boolean, true if it passes the filter.
        }



        var table = new Tabulator("#booking-table", {
            layout:"fitDataFill",
            groupBy:"Fecha de Reserva",
            columns:[
                {title:"Id", field:"id", headerFilter:"input"},
                {title:"Fecha de Reserva", field:"Fecha de Reserva", headerFilter:"input"},
                {title:"Destino", field:"Destino", headerFilter:"input"},
                
                {title:"Tipo de Servicio", field:"Servicio", width:120, headerFilter:"input"},

            ],
        });

        /*
        *
        *  {title:"Progress", field:"progress", width:150, formatter:"progress", sorter:"number", headerFilter:minMaxFilterEditor, headerFilterFunc:minMaxFilterFunction},
                {title:"Gender", field:"gender", editor:"select", editorParams:{values:{"male":"Male", "female":"Female"}}, headerFilter:true, headerFilterParams:{values:{"male":"Male", "female":"Female", "":""}}},
                {title:"Rating", field:"rating", editor:"star", align:"center", width:100, headerFilter:"number", headerFilterPlaceholder:"at least...", headerFilterFunc:">="},
                {title:"Favourite Color", field:"col", headerFilter:"input"},
                {title:"Date Of Birth", field:"dob", align:"center", sorter:"date",  headerFilter:"input"},
                {title:"Driver", field:"car", align:"center", formatter:"tickCross",  headerFilter:"tickCross",  headerFilterParams:{"tristate":true},headerFilterEmptyCheck:function(value){return value === null}},


        * */
    </script>


{% endblock %}
