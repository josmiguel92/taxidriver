{% extends 'AppBundle:Front:baseBooking.html.twig' %}


{% set title = "I will make my own tour "%}
{% if locale=='es' %}
    {% set title = "Hare mi propio camino " %}
{% endif %}


{% set description = content.getReservationDescriptionLocale %}
{% set featureImage = content.getOwnrouteimage.getWebPath %}

{% set spanish_page = path("bookingOwnTour", {"_locale":"es"}) %}
{% set english_page = path("bookingOwnTour", {"_locale":"en"}) %}



{% block destination %}

    <div class="row">
        <div class="cell-md-8 col-md-8">
            <div class="well-row">
                <div id="placesList" class="range range-xs-center range-md-middle">



                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="well-row">
                <div class="range range-xs-center range-md-left">
                    <div>
                        <a href="#" class="disabled-link" id="removePlaceInput">
                            <i class=" fa fa-2x fa-minus-square-o"></i>
                        </a>
                        <a href="#" class="" id="addPlaceInput">
                            <i class=" fa fa-2x fa-plus-square-o"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="well-row" id="map" style="height: 60vh;"></div>

{% endblock %}

{% block javascript %}
{{ parent() }}
    <script src="{{ asset("js/jquery.placepicker.js") }}"></script>

    <script>
        var google;
        var inputsNumber = 1;
        var item = "<div id='selectPlace_x' style='max-width: 400px; width: 350%;' class='form-group selectPlace'><label for='place_1' class='form-label rd-input-label'></label><input class='placepicker form-control form-control-has-validation' id='place_1' name='place_1' type='text' style='padding: 10px 12px;'><span class='form-validation'></span></div>";

        markers = [];

        function newInputPlace (e, click) {
            if (click){
                e.preventDefault();
                $("#removePlaceInput")[0].classList.remove("disabled-link");
            }

            var parent = $('#placesList');
            parent.append(item);
            var _idParent = 'selectPlace_'+inputsNumber;
            $('#selectPlace_x')[0].setAttribute('id',_idParent);
            parent = $('#'+_idParent)[0];
            var _id = 'place_'+inputsNumber;
            parent.children[0].setAttribute('for', _id);
            parent.children[1].setAttribute('id', _id);
            parent.children[1].setAttribute('name', _id);

            $('#'+_id).placepicker({
                    placeChanged: function(place) {
                        if (typeof(markers[_id.replace("place_","")])!="undefined"){
                            markers[parseInt(_id.replace("place_",""))].setMap(null)
                        }
                        $('#'+_id)[0].dataset['latlog'] = this.getLocation().latitude + ', '+this.getLocation().longitude;
                        var point = new google.maps.LatLng(this.getLocation().latitude, this.getLocation().longitude);
                        markers[parseInt(_id.replace("place_",""))] = new google.maps.Marker({
                            position: point,
                            map: map
                        });

                    }
                });
            inputsNumber++;
        }

        function removeinputPlace(e, click){
            if (click)
                e.preventDefault();
            if (inputsNumber > 2){
                inputsNumber--;
                var parent = $('#placesList');
                var lastChild = parent[0].children.length-1;
                parent[0].children[lastChild].remove()
                markers[inputsNumber].setMap(null)
            }
            else{
                $("#removePlaceInput")[0].classList.add("disabled-link");
            }
        }

        $("#addPlaceInput").on('click', function(e) {
          newInputPlace(e, true);
        } );

        $("#removePlaceInput").on('click', function(e) {
            removeinputPlace(e, true);
        });

        function init() {
            // Basic options for a simple Google Map
            // For more options see: https://developers.google.com/maps/documentation/javascript/reference#MapOptions

            var mycenter = new google.maps.LatLng(22.5267186, -81.12788139999998);

            var mapOptions = {
                // How zoomed in you want the map to start at (always required)
                zoom: 8,

                // The latitude and longitude to center the map (always required)
                center: mycenter,

                // How you would like to style the map.
                scrollwheel: false,
                styles: [{"featureType":"administrative.land_parcel","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"landscape.man_made","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"road","elementType":"labels","stylers":[{"visibility":"simplified"},{"lightness":20}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"hue":"#f49935"}]},{"featureType":"road.highway","elementType":"labels","stylers":[{"visibility":"simplified"}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"hue":"#fad959"}]},{"featureType":"road.arterial","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"visibility":"simplified"}]},{"featureType":"road.local","elementType":"labels","stylers":[{"visibility":"simplified"}]},{"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"water","elementType":"all","stylers":[{"hue":"#a1cdfc"},{"saturation":30},{"lightness":49}]}]
            };

            // Get the HTML DOM element that will contain your map
            // We are using a div with id="map" seen below in the <body>
            var mapElement = document.getElementById('map');

            // Create the Google Map using out element and options defined above
            map = new google.maps.Map(mapElement, mapOptions);
        }

      //  function addPlace
        google.maps.event.addDomListener(window, 'load', init);

    </script>

    <script>
        $("#document").ready(function (){
            $("#labelPrice")[0].innerHTML = "{% trans %}We need to negotiate {% endtrans %} <span class=\"text-extra-small\">*</span>";
            newInputPlace(null, false);
        });
    </script>

{% endblock %}

{% block stringfy %}
        _places = "";
        for(var i = 1; i< inputsNumber; i++)
        {
            var _id = 'place_'+i;
            _places += $("#"+_id)[0].value+" | ";
        }

        $("#{{ booking_form.ownroute.vars.id}}")[0].value = _places;
{% endblock %}