{% extends 'AppBundle:Front:baseBooking.html.twig' %}


{% set title = "I will make my own tour "%}
{% if locale=='es' %}
    {% set title = "Haré mi propio camino " %}
{% endif %}


{% if locale=='es' %}
    {% set description = 'Taxi o Tour desde cualquier punto de Cuba hacia cualquier otro punto de cuba, así de simple. '~content.getReservationDescriptionLocale %}
{% else %}
    {% set description = 'Taxi or Tour from any point of Cuba to any other point of Cuba, so simple! '~content.getReservationDescriptionLocale %}
{% endif %}


{% set featureImage = content.getOwnrouteimage.getWideImageWebPath %}

{% set spanish_page = path("bookingOwnTour", {"_locale":"es"}) %}
{% set english_page = path("bookingOwnTour", {"_locale":"en"}) %}

{% block hreflang %}
    <link rel="alternate" hreflang="en" href="{{ absolute_url(english_page) }}" />
    <link rel="alternate" hreflang="es" href="{{ absolute_url(spanish_page) }}" />
    <link rel="alternate" hreflang="x-default" href="{{ absolute_url(english_page) }}" />
{% endblock %}

{% block structure_data %}
    {#breadcrumbs#}
    <script type="application/ld+json">
        {
          "@context": "http://schema.org",
          "@type": "BreadcrumbList",
          "itemListElement": [{
            "@type": "ListItem",
            "position": 1,
            "item": {
              "@id": "https://www.taxidriverscuba.com/",
              "name": "Home",
              "image": "{{ asset("/images/favicon.png") }}"
            }
          }
          {
            "@type": "ListItem",
            "position": 2,
            "item": {
              "@id": "{{ absolute_url(english_page) }}",
              "name": "I will make my own tour",
              "image": "{{ asset("/images/favicon.png") }}"
            }
          }]
        }
    </script>
{% endblock %}

{% block tour_explication %}
    <p class="text-uppercase text-bold text-spacing-25 font-accent text-gray-dark">
        <small class="subtitle">
            From Havana to where you decide to take your trip in the wonderful Cuban island.<br/>

            You will have the luxury of traveling in a classic car, discovering the different wonders of our island with a skilled driver with the knowledge to guide you through the most attractive, interesting and safe places. In Taxi Drivers Cuba, we make from each place the best, extracting all the flavor of the local culture.<br/>

            You will have a car available for you 24 hrs a day.<br/>

            The cost would be $100.00 cuc a day for the car while you stay in Havana City.<br/>

            The cost would be $150.00 cuc a day for the car if you decide to travel to the different regions of our island.<br/>

            You just have to think of enjoying your beautiful vacations in our country, we make ourselves responsible for the car to be ready for you each moment you need it, you won’t have to worry to supply fuel for the car or thinking of driving… let you get carried away!<br/>
        </small>
    </p>
{% endblock %}


{% block destination %}

    <div class="row">
        <div class="cell-md-8 col-md-8">
            <div class="well-row">
                <div id="placesList" class="range range-xs-center range-md-middle">



                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="well-row">
                <div class="range range-xs-center range-md-left">
                    <div>
                        <a href="#" class="disabled-link" id="removePlaceInput">
                            <i class=" fa fa-2x fa-minus-square-o"></i>
                        </a>
                        <a href="#" class="" id="addPlaceInput">
                            <i class=" fa fa-2x fa-plus-square-o"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="well-row" id="map" style="height: 60vh;"></div>

{% endblock %}

{% block javascript %}
{{ parent() }}
    {#  Google Maps Plugin #}
    <script src="https://maps.googleapis.com/maps/api/js?key={{ google_api_key }}&libraries=places"></script>

    <script src="{{ asset("js/jquery.placepicker.js") }}"></script>

    <script>
        var google;
        var inputsNumber = 1;
        var item = "<div id='selectPlace_x' style='max-width: 400px; width: 350%;' class='form-group selectPlace'><label for='place_1' class='form-label rd-input-label'></label><input class='placepicker form-control form-control-has-validation' id='place_1' name='place_1' type='text' style='padding: 10px 12px;'><span class='form-validation'></span></div>";

        markers = [];

        function newInputPlace (e, click) {
            if (click){
                e.preventDefault();
                $("#removePlaceInput")[0].classList.remove("disabled-link");
            }

            var parent = $('#placesList');
            parent.append(item);
            var _idParent = 'selectPlace_'+inputsNumber;
            $('#selectPlace_x')[0].setAttribute('id',_idParent);
            parent = $('#'+_idParent)[0];
            var _id = 'place_'+inputsNumber;
            parent.children[0].setAttribute('for', _id);
            parent.children[1].setAttribute('id', _id);
            parent.children[1].setAttribute('name', _id);

            $('#'+_id).placepicker({
                    placeChanged: function(place) {
                        if (typeof(markers[_id.replace("place_","")])!="undefined"){
                            markers[parseInt(_id.replace("place_",""))].setMap(null)
                        }
                        $('#'+_id)[0].dataset['latlog'] = this.getLocation().latitude + ', '+this.getLocation().longitude;
                        var point = new google.maps.LatLng(this.getLocation().latitude, this.getLocation().longitude);
                        markers[parseInt(_id.replace("place_",""))] = new google.maps.Marker({
                            position: point,
                            map: map
                        });

                    }
                });
            inputsNumber++;
        }

        function removeinputPlace(e, click){
            if (click)
                e.preventDefault();
            if (inputsNumber > 2){
                inputsNumber--;
                var parent = $('#placesList');
                var lastChild = parent[0].children.length-1;
                parent[0].children[lastChild].remove()
                markers[inputsNumber].setMap(null)
            }
            else{
                $("#removePlaceInput")[0].classList.add("disabled-link");
            }
        }

        $("#addPlaceInput").on('click', function(e) {
          newInputPlace(e, true);
        } );

        $("#removePlaceInput").on('click', function(e) {
            removeinputPlace(e, true);
        });

        function init() {
            // Basic options for a simple Google Map
            // For more options see: https://developers.google.com/maps/documentation/javascript/reference#MapOptions

            var mycenter = new google.maps.LatLng(22.5267186, -81.12788139999998);

            var mapOptions = {
                // How zoomed in you want the map to start at (always required)
                zoom: 8,

                // The latitude and longitude to center the map (always required)
                center: mycenter,

                // How you would like to style the map.
                scrollwheel: false,
                styles: [{"featureType":"administrative.land_parcel","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"landscape.man_made","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"road","elementType":"labels","stylers":[{"visibility":"simplified"},{"lightness":20}]},{"featureType":"road.highway","elementType":"geometry","stylers":[{"hue":"#f49935"}]},{"featureType":"road.highway","elementType":"labels","stylers":[{"visibility":"simplified"}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"hue":"#fad959"}]},{"featureType":"road.arterial","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"visibility":"simplified"}]},{"featureType":"road.local","elementType":"labels","stylers":[{"visibility":"simplified"}]},{"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"water","elementType":"all","stylers":[{"hue":"#a1cdfc"},{"saturation":30},{"lightness":49}]}]
            };

            // Get the HTML DOM element that will contain your map
            // We are using a div with id="map" seen below in the <body>
            var mapElement = document.getElementById('map');

            // Create the Google Map using out element and options defined above
            map = new google.maps.Map(mapElement, mapOptions);
        }

      //  function addPlace
        google.maps.event.addDomListener(window, 'load', init);

    </script>

    <script>
        $("#document").ready(function (){
            $("#labelPrice")[0].innerHTML = "{% trans %}We need to negotiate{% endtrans %} <span class=\"text-extra-small\">*</span>";
            newInputPlace(null, false);
        });
    </script>

{% endblock %}

{% block stringfy %}
        _places = "";
        for(var i = 1; i< inputsNumber; i++)
        {
            var _id = 'place_'+i;
            _places += $("#"+_id)[0].value+" | ";
        }

        $("#{{ booking_form.ownroute.vars.id}}")[0].value = _places;
{% endblock %}